<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lafx0</title>
    <link>/</link>
    <description>Recent content on lafx0</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Jul 2020 16:04:02 +0100</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction</title>
      <link>/posts/hackthebox/introduction/</link>
      <pubDate>Sat, 13 Jun 2020 16:04:02 +0100</pubDate>
      
      <guid>/posts/hackthebox/introduction/</guid>
      <description>Here I will post my personal write ups about boxes I&amp;rsquo;m solving on Hack the Box.</description>
    </item>
    
    <item>
      <title>Lame</title>
      <link>/posts/hackthebox/lame/</link>
      <pubDate>Sun, 14 Jun 2020 16:04:02 +0100</pubDate>
      
      <guid>/posts/hackthebox/lame/</guid>
      <description>Machine info  OS : Linux Difficulty : Easy Points : 20 IP : 10.10.10.3  Mind Map Reconnaisance First of all, let&amp;rsquo;s conduct a scan in order to check what ports are open:
sudo nmap -A -T4 10.10.10.3 -n -oA ./nmap  where -A stands for &amp;lsquo;Enable OS detection, version detection, script scanning, and traceroute&amp;rsquo; where -T4 is for setting the timing template (available from 0 to 5) where -n stands for &amp;lsquo;Never do DNS resolution&amp;rsquo; where -oA stands for &amp;lsquo;Output in the three major formats at once&amp;rsquo;  Here&amp;rsquo;s the scan result:</description>
    </item>
    
    <item>
      <title>Shocker</title>
      <link>/posts/hackthebox/shocker/</link>
      <pubDate>Mon, 15 Jun 2020 16:04:02 +0100</pubDate>
      
      <guid>/posts/hackthebox/shocker/</guid>
      <description>Machine info  OS : Linux Difficulty : Easy Points : 20 IP : 10.10.10.56  Mind Map Reconnaisance Initial scan to check open ports:
sudo nmap -sSV -p- -n 10.10.10.56 -oA nmap/sSV_scan Scan result:
Nmap scan report for 10.10.10.56 Host is up (0.064s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) 2222/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.</description>
    </item>
    
    <item>
      <title>Bashed</title>
      <link>/posts/hackthebox/bashed/</link>
      <pubDate>Tue, 16 Jun 2020 16:04:02 +0100</pubDate>
      
      <guid>/posts/hackthebox/bashed/</guid>
      <description>Machine info  OS : Linux Difficulty : Easy Points : 20 IP : 10.10.10.68  Mind Map Reconnaisance Initial scan results:
sudo nmap -sS -p- -n 10.10.10.68 -oA nmap/sS_full_scan ... Nmap scan report for 10.10.10.68 Host is up (0.066s latency). Not shown: 65534 closed ports PORT STATE SERVICE 80/tcp open http Note: a full port UDP scan does not reveal any new open port.
With the -sV option I can see that Apache HTTP Server 2.</description>
    </item>
    
    <item>
      <title>Nibbles</title>
      <link>/posts/hackthebox/nibbles/</link>
      <pubDate>Fri, 19 Jun 2020 16:04:02 +0100</pubDate>
      
      <guid>/posts/hackthebox/nibbles/</guid>
      <description>Machine info  OS : Linux Difficulty : Easy Points : 20 IP : 10.10.10.75  Mind Map Reconnaisance I start with a scan to check for open ports:
sudo nmap -sT -sV -n 10.10.10.75 -oA nmap/sT_SV_scan Starting Nmap 7.80 ( https://nmap.org ) at 2020-06-20 10:32 BST Nmap scan report for 10.10.10.75 Host is up (0.097s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>/posts/overthewire/introduction/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/overthewire/introduction/</guid>
      <description>Here I will post my personal write ups about my journey through Over the Wire levels.
I will start with Bandit and with more basic challenges.</description>
    </item>
    
    <item>
      <title>Jerry</title>
      <link>/posts/hackthebox/jerry/</link>
      <pubDate>Thu, 25 Jun 2020 16:04:02 +0100</pubDate>
      
      <guid>/posts/hackthebox/jerry/</guid>
      <description>Machine info  OS : Windows Difficulty : Easy Points : 20 IP : 10.10.10.95  Mind Map Reconnaisance I start with the usual initial scan to check for useful open ports:
Nmap scan report for 10.10.10.95 Host is up (0.078s latency). Not shown: 999 filtered ports PORT STATE SERVICE 8080/tcp open http-proxy Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: Microsoft Windows Server 2012 or Windows Server 2012 R2 (91%), Microsoft Windows Server 2012 R2 (91%), Microsoft Windows Server 2012 (90%), Microsoft Windows 7 Professional (87%), Microsoft Windows 8.</description>
    </item>
    
    <item>
      <title>Level 0</title>
      <link>/posts/overthewire/level0/</link>
      <pubDate>Mon, 30 Mar 2020 18:50:25 +0200</pubDate>
      
      <guid>/posts/overthewire/level0/</guid>
      <description>Level Goal
The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0.
Once logged in, go to the Level 1 page to find out how to beat Level 1.
Short Lesson
What is SSH?
 Secure Shell (SSH) is a cryptographic network protocol for operating network services securely over an unsecured network.</description>
    </item>
    
    <item>
      <title>Devel</title>
      <link>/posts/hackthebox/devel/</link>
      <pubDate>Thu, 25 Jun 2020 16:04:02 +0100</pubDate>
      
      <guid>/posts/hackthebox/devel/</guid>
      <description>Machine info  OS : Windows Difficulty : Easy Points : 20 IP : 10.10.10.5  Mind Map Reconnaisance Initial scan:
sudo nmap -sT -n -O 10.10.10.5 -oA nmap/sT_scan Result:
Nmap scan report for 10.10.10.5 Host is up (0.075s latency). Not shown: 998 filtered ports PORT STATE SERVICE 21/tcp open ftp 80/tcp open http Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose|phone|specialized Running (JUST GUESSING): Microsoft Windows 8|Phone|2008|7|8.</description>
    </item>
    
    <item>
      <title>Level 0 -&gt; Level 1</title>
      <link>/posts/overthewire/level01/</link>
      <pubDate>Wed, 06 May 2020 17:25:41 +0200</pubDate>
      
      <guid>/posts/overthewire/level01/</guid>
      <description>Level Goal
The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.
Short Lesson
Useful commands:
 The &amp;lsquo;ls&amp;rsquo; command displays a list of names of all files in the current directory.</description>
    </item>
    
    <item>
      <title>Blue</title>
      <link>/posts/hackthebox/blue/</link>
      <pubDate>Fri, 26 Jun 2020 16:04:02 +0100</pubDate>
      
      <guid>/posts/hackthebox/blue/</guid>
      <description>Machine info  OS : Windows Difficulty : Easy Points : 20 IP : 10.10.10.40  Mind Map Reconnaisance I start with an initial scan, including the -sC option which will run also the default scripts:
sudo nmap -sC -sV -O 10.10.10.40 -n -oA nmap/initial Nmap scan report for 10.10.10.40 Host is up (0.073s latency). Not shown: 991 closed ports PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP) 49152/tcp open msrpc Microsoft Windows RPC 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open msrpc Microsoft Windows RPC 49155/tcp open msrpc Microsoft Windows RPC 49156/tcp open msrpc Microsoft Windows RPC 49157/tcp open msrpc Microsoft Windows RPC No exact OS matches for host (If you know what OS is running on it, see https://nmap.</description>
    </item>
    
    <item>
      <title>Level 1 -&gt; Level 2</title>
      <link>/posts/overthewire/level02/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level02/</guid>
      <description>Level Goal
The password for the next level is stored in a file called - located in the home directory.
Short Lesson
 Every command in Linux may be followed by one or more options. An options is passed to a command with the &#39; - &#39; character.
  For example, to also list all the hidden files in the current directory, we can use:
  ls -a  Solution We may be tempted to simply enter the following:</description>
    </item>
    
    <item>
      <title>Legacy</title>
      <link>/posts/hackthebox/legacy/</link>
      <pubDate>Sun, 28 Jun 2020 16:04:02 +0100</pubDate>
      
      <guid>/posts/hackthebox/legacy/</guid>
      <description>Machine info  OS : Windows Difficulty : Easy Points : 20 IP : 10.10.10.4  Mind Map Reconnaisance First of all, let&amp;rsquo;s see the nmap scan result:
Nmap scan report for 10.10.10.4 Host is up (0.068s latency). Not shown: 997 filtered ports PORT STATE SERVICE VERSION 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows XP microsoft-ds 3389/tcp closed ms-wbt-server Service Info: OSs: Windows, Windows XP; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_xp Host script results: |_clock-skew: mean: 5d00h27m38s, deviation: 2h07m16s, median: 4d22h57m38s |_nbstat: NetBIOS name: LEGACY, NetBIOS user: &amp;lt;unknown&amp;gt;, NetBIOS MAC: 00:50:56:b9:36:42 (VMware) | smb-os-discovery: | OS: Windows XP (Windows 2000 LAN Manager) | OS CPE: cpe:/o:microsoft:windows_xp::- | Computer name: legacy | NetBIOS computer name: LEGACY\x00 | Workgroup: HTB\x00 |_ System time: 2020-07-04T14:49:56+03:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) |_smb2-time: Protocol negotiation failed (SMB2) So I have as open ports only the 139 and 445.</description>
    </item>
    
    <item>
      <title>Level 2 -&gt; Level 3</title>
      <link>/posts/overthewire/level03/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level03/</guid>
      <description>Level Goal
The password for the next level is stored in a file called spaces in this filename located in the home directory.
Solution In order to access file or directories with spaces in their name, we have to 2 ways:
 Specifying the file / dir name in quotation marks:  bandit2@bandit:~$ cat &amp;#34;spaces in this filename&amp;#34; UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK Escaping the space in the file / dir name:  bandit2@bandit:~$ cat spaces\ in\ this\ filename UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK  We successfully found the password for Level 3!</description>
    </item>
    
    <item>
      <title>Blunder</title>
      <link>/posts/hackthebox/blunder/</link>
      <pubDate>Sat, 04 Jul 2020 16:04:02 +0100</pubDate>
      
      <guid>/posts/hackthebox/blunder/</guid>
      <description>Machine info  OS : Linux Difficulty : Easy Points : 20 IP : 10.10.10.191  Mind Map Reconnaisance Initial scan:
sudo nmap -sC -sV -n 10.10.10.191 -oA nmap/initial Nmap scan report for 10.10.10.191 Host is up (0.077s latency). Not shown: 998 filtered ports PORT STATE SERVICE VERSION 21/tcp closed ftp 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-generator: Blunder |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Blunder | A blunder of interesting facts Only port 80 is open.</description>
    </item>
    
    <item>
      <title>Level 3 -&gt; Level 4</title>
      <link>/posts/overthewire/level04/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level04/</guid>
      <description>Level Goal
The password for the next level is stored in a hidden file in the inhere directory.
Solution In order to list hidden files inside a directory, we must use the ls command with the -a (all) switch:
bandit3@bandit:~$ cd inhere bandit3@bandit:~/inhere$ ls -a . .. .hidden Alternatively we could also use the long listing format (-l) in conjunction with the -a switch, in order to check permissions and to understand if we are dealing with files or directories:</description>
    </item>
    
    <item>
      <title>Remote</title>
      <link>/posts/hackthebox/remote/</link>
      <pubDate>Wed, 22 Jul 2020 16:04:02 +0100</pubDate>
      
      <guid>/posts/hackthebox/remote/</guid>
      <description>Machine info  OS : Windows Difficulty : Easy Points : 20 IP : 10.10.10.180  Mind Map Reconnaisance First I run the usual initial scan:
sudo nmap -n 10.10.10.180 -sV Nmap scan report for 10.10.10.180 Host is up (0.076s latency). Not shown: 993 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd 80/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) 111/tcp open rpcbind 2-4 (RPC #100000) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds?</description>
    </item>
    
    <item>
      <title>Level 4 -&gt; Level 5</title>
      <link>/posts/overthewire/level05/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level05/</guid>
      <description>Level Goal
The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.
Solution We can solve this level in three ways:
 With the file command:  Short Lesson
 The file command is used to determine the type of a file. File type may be of human-readable (e.g. ‘ASCII text’) or MIME type(e.</description>
    </item>
    
    <item>
      <title>Buff</title>
      <link>/posts/hackthebox/buff/</link>
      <pubDate>Fri, 24 Jul 2020 16:04:02 +0100</pubDate>
      
      <guid>/posts/hackthebox/buff/</guid>
      <description>Machine info  OS : Windows Difficulty : Easy Points : 20 IP : 10.10.10.198  Mind Map Reconnaisance Initial scan:
sudo nmap -sT -n -O 10.10.10.5 -oA nmap/sT_scan Result:
sudo nmap -sC -sV -n -Pn 10.10.10.198 Nmap scan report for 10.10.10.198 Host is up (0.082s latency). Not shown: 999 filtered ports PORT STATE SERVICE VERSION 8080/tcp open http Apache httpd 2.4.43 ((Win64) OpenSSL/1.1.1g PHP/7.4.6) | http-open-proxy: Potentially OPEN proxy. |_Methods supported:CONNECTION |_http-server-header: Apache/2.</description>
    </item>
    
    <item>
      <title>Level 5 -&gt; Level 6</title>
      <link>/posts/overthewire/level06/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level06/</guid>
      <description>Level Goal
The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:
 human-readable 1033 bytes in size not executable  Solution Short Lesson
 The find command in UNIX is a command line utility for walking a file hierarchy. It can be used to find files and directories and perform subsequent operations on them. It supports searching by file, folder, name, creation date, modification date, owner and permissions.</description>
    </item>
    
    <item>
      <title>Level 6 -&gt; Level 7</title>
      <link>/posts/overthewire/level07/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level07/</guid>
      <description>Level Goal
The password for the next level is stored somewhere on the server and has all of the following properties:
 owned by user bandit7 owned by group bandit6 33 bytes in size  Solution Like we did in the previous level, we can use the find command:
bandit6@bandit:~$ find / -user bandit7 -group bandit6 -size 33c The problem with this command is that the terminal will also print out all the files for which we don&amp;rsquo;t have read permissions.</description>
    </item>
    
    <item>
      <title>Level 7 -&gt; Level 8</title>
      <link>/posts/overthewire/level08/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level08/</guid>
      <description>Level Goal
The password for the next level is stored in the file data.txt next to the word millionth.
Solution Short Lesson
 The grep command is used to search text. It searches the given file for lines containing a match to the given strings or words. It is one of the most useful commands on Linux and Unix-like system.
 The given file is composed by a hundreds of lines containing a word followed by a password.</description>
    </item>
    
    <item>
      <title>Level 8 -&gt; Level 9</title>
      <link>/posts/overthewire/level09/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level09/</guid>
      <description>Level Goal
The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.
Solution The provided file is a collection of multiple passwords. Some of the passwords are repeated through the file. Our goal is to find the password that appears only one. We will be using two new commands, sort and uniq.
Short Lesson
 The sort command is used to sort a file, arranging the records in a particular order.</description>
    </item>
    
    <item>
      <title>Level 9 -&gt; Level 10</title>
      <link>/posts/overthewire/level10/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level10/</guid>
      <description>Level Goal
The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several ‘=’ characters.
Solution Let&amp;rsquo;s first check the data type of the file we are given:
bandit9@bandit:~$ file data.txt data.txt: data Short Lesson
 The .data file extension is given to the data files that have been created by and used for a variety of different software applications.</description>
    </item>
    
    <item>
      <title>Level 10 -&gt; Level 11</title>
      <link>/posts/overthewire/level11/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level11/</guid>
      <description>Level Goal
The password for the next level is stored in the file data.txt, which contains base64 encoded data.
Solution Short Lesson
 In computer science, base64 is a group of binary-to-text encoding schemes that represent binary data in an ASCII string format by translating it into a radix-64 representation.
  The base64 command is useful to base64 encode/decode data and print to standard output.
 We have to base64 decode the given file, so we will use the -d switch (decode):</description>
    </item>
    
    <item>
      <title>Level 11 -&gt; Level 12</title>
      <link>/posts/overthewire/level12/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level12/</guid>
      <description>Level Goal
The password for the next level is stored in the file data.txt, where all lowercase (a-z) and uppercase (A-Z) letters have been rotated by 13 positions.
Solution If we try to read the content of the file data.txt we can see that the message has been encoded:
bandit11@bandit:~$ cat data.txt Gur cnffjbeq vf 5Gr8L4qetPEsPk8htqjhRK8XSP6x2RHh The level description suggests that we are dealing with a ROT13 (rotate by 13 places) substitution cipher.</description>
    </item>
    
    <item>
      <title>Level 12 -&gt; Level 13</title>
      <link>/posts/overthewire/level13/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level13/</guid>
      <description>Level Goal
The password for the next level is stored in the file data.txt, which is a hexdump of a file that has been repeatedly compressed. For this level it may be useful to create a directory under /tmp in which you can work using mkdir. For example: mkdir /tmp/myname123. Then copy the datafile using cp, and rename it using mv (read the manpages!)
Solution Short Lesson
 In computing, a hex dump is a hexadecimal view of computer data, from RAM or from a computer file or storage device.</description>
    </item>
    
    <item>
      <title>Level 13 -&gt; Level 14</title>
      <link>/posts/overthewire/level14/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level14/</guid>
      <description>Level Goal
The password for the next level is stored in /etc/bandit_pass/bandit14 and can only be read by user bandit14. For this level, you don’t get the next password, but you get a private SSH key that can be used to log into the next level.
Note: localhost is a hostname that refers to the machine you are working on.
Solution Short Lesson
 Secure Shell (SSH) is a cryptographic network protocol for operating network services securely over an unsecured network.</description>
    </item>
    
    <item>
      <title>Level 14 -&gt; Level 15</title>
      <link>/posts/overthewire/level15/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level15/</guid>
      <description>Level Goal
The password for the next level can be retrieved by submitting the password of the current level to port 30000 on localhost.
Solution We have to connect on port 30000 on the current machine. We can do that with the nc command.
 netcat is a simple Unix utility which reads and writes data across network connections, using TCP or UDP protocol. It is designed to be a reliable &amp;ldquo;back-end&amp;rdquo; tool that can be used directly or easily driven by other programs and scripts.</description>
    </item>
    
    <item>
      <title>Level 15 -&gt; Level 16</title>
      <link>/posts/overthewire/level16/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level16/</guid>
      <description>Level Goal
The password for the next level can be retrieved by submitting the password of the current level to port 30001 on localhost using SSL encryption.
Helpful note: Getting “HEARTBEATING” and “Read R BLOCK”? Use -ign_eof and read the “CONNECTED COMMANDS” section in the manpage. Next to ‘R’ and ‘Q’, the ‘B’ command also works in this version of that command…
Solution This level is the same as the previous one, except for the fact that we have to connect using SSL.</description>
    </item>
    
    <item>
      <title>Level 16 -&gt; Level 17</title>
      <link>/posts/overthewire/level17/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level17/</guid>
      <description>Level Goal
The credentials for the next level can be retrieved by submitting the password of the current level to a port on localhost in the range 31000 to 32000. First find out which of these ports have a server listening on them. Then find out which of those speak SSL and which don’t. There is only 1 server that will give the next credentials, the others will simply send back to you whatever you send to it.</description>
    </item>
    
    <item>
      <title>Level 17 -&gt; Level 18</title>
      <link>/posts/overthewire/level18/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level18/</guid>
      <description>Level Goal
There are 2 files in the homedirectory: passwords.old and passwords.new. The password for the next level is in passwords.new and is the only line that has been changed between passwords.old and passwords.new.
NOTE: if you have solved this level and see ‘Byebye!’ when trying to log into bandit18, this is related to the next level, bandit19.
Solution Basically we have to find the differences between the two files provided.</description>
    </item>
    
    <item>
      <title>Level 18 -&gt; Level 19</title>
      <link>/posts/overthewire/level19/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level19/</guid>
      <description>Level Goal
The password for the next level is stored in a file readme in the home directory. Unfortunately, someone has modified .bashrc to log you out when you log in with SSH.
Solution When we try to login to level 18 with the previously discovered password, we are informed that the connection is closed.
Byebye ! Connection to bandit.labs.overthewire.org closed. This is why the .bashrc file was modified and is not letting to connect.</description>
    </item>
    
    <item>
      <title>Level 19 -&gt; Level 20</title>
      <link>/posts/overthewire/level20/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level20/</guid>
      <description>Level Goal
To gain access to the next level, you should use the setuid binary in the home directory. Execute it without arguments to find out how to use it. The password for this level can be found in the usual place (/etc/bandit_pass), after you have used the setuid binary.
Solution Short Lesson
 The Unix access rights flags setuid and setgid (short for &amp;ldquo;set user ID&amp;rdquo; and &amp;ldquo;set group ID&amp;rdquo;) allow users to run an executable with the file system permissions of the executable&amp;rsquo;s owner or group respectively and to change behaviour in directories.</description>
    </item>
    
    <item>
      <title>Level 20 -&gt; Level 21</title>
      <link>/posts/overthewire/level21/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level21/</guid>
      <description>Level Goal
There is a setuid binary in the home directory that does the following: it makes a connection to localhost on the port you specify as a commandline argument. It then reads a line of text from the connection and compares it to the password in the previous level (bandit20). If the password is correct, it will transmit the password for the next level (bandit21).
NOTE: Try connecting to your own network daemon to see if it works as you think.</description>
    </item>
    
    <item>
      <title>Level 21 -&gt; Level 22</title>
      <link>/posts/overthewire/level22/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level22/</guid>
      <description>Level Goal
A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.
Solution Short Lesson
 Cron allows Linux and Unix users to run commands or scripts at a given date and time. You can schedule scripts to be executed periodically. Cron is one of the most useful tool in a Linux or UNIX like operating systems.</description>
    </item>
    
    <item>
      <title>Level 22 -&gt; Level 23</title>
      <link>/posts/overthewire/level23/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level23/</guid>
      <description>Level Goal
A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.
NOTE: Looking at shell scripts written by other people is a very useful skill. The script for this level is intentionally made easy to read. If you are having problems understanding what it does, try executing it to see the debug information it prints.</description>
    </item>
    
    <item>
      <title>Level 23 -&gt; Level 24</title>
      <link>/posts/overthewire/level24/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level24/</guid>
      <description>Level Goal
A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.
NOTE: This level requires you to create your own first shell-script. This is a very big step and you should be proud of yourself when you beat this level!
NOTE 2: Keep in mind that your shell script is removed once executed, so you may want to keep a copy around…</description>
    </item>
    
    <item>
      <title>Level 24 -&gt; Level 25</title>
      <link>/posts/overthewire/level25/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level25/</guid>
      <description>Level Goal
A daemon is listening on port 30002 and will give you the password for bandit25 if given the password for bandit24 and a secret numeric 4-digit pincode. There is no way to retrieve the pincode except by going through all of the 10000 combinations, called brute-forcing.
Solution For this level we will have to write our own script. But before that, what is brute forcing?
Short Lesson
 In cryptography, a brute-force attack consists of an attacker submitting many passwords or passphrases with the hope of eventually guessing correctly.</description>
    </item>
    
    <item>
      <title>Level 25 -&gt; Level 26</title>
      <link>/posts/overthewire/level26/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level26/</guid>
      <description>Level Goal
Logging in to bandit26 from bandit25 should be fairly easy… The shell for user bandit26 is not /bin/bash, but something else. Find out what it is, how it works and how to break out of it.
Solution Under the working directory we have a SSH Private Key that we can use to connect to the next level:
bandit25@bandit:~$ ls bandit26.sshkey bandit25@bandit:~$ ssh -i bandit26.sshkey localhost -l bandit26 -t /bin/sh Could not create directory &amp;#39;/home/bandit25/.</description>
    </item>
    
    <item>
      <title>Level 26 -&gt; Level 27</title>
      <link>/posts/overthewire/level27/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level27/</guid>
      <description>Level Goal
Good job getting a shell! Now hurry and grab the password for bandit27!
Solution Note: This level will assume that we are in this shell obtained in the previous level.
The working directory has a script named bandit27-do. Let&amp;rsquo;s see what it does:
bandit26@bandit:~$ ./bandit27-do Run a command as another user. Example: ./bandit27-do id We can run any command with it, so let&amp;rsquo;s read the password for the next level!</description>
    </item>
    
    <item>
      <title>Level 27 -&gt; Level 28</title>
      <link>/posts/overthewire/level28/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level28/</guid>
      <description>Level Goal
There is a git repository at ssh://bandit27-git@localhost/home/bandit27-git/repo. The password for the user bandit27-git is the same as for the user bandit27.
Solution For this level we have to download a git repository stored online.
Short Lesson
 Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.
 First we will create a directory under /tmp where we have write permissions:</description>
    </item>
    
    <item>
      <title>Level 28 -&gt; Level 29</title>
      <link>/posts/overthewire/level29/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level29/</guid>
      <description>Level Goal
There is a git repository at ssh://bandit28-git@localhost/home/bandit28-git/repo. The password for the user bandit28-git is the same as for the user bandit28.
Solution Let&amp;rsquo;s create a directory with write permissions and clone the repo:
bandit28@bandit:~$ mkdir /tmp/git_level29 bandit28@bandit:~$ cd /tmp/git_level29 bandit28@bandit:/tmp/git_level29$ git clone ssh://bandit28-git@localhost/home/bandit28-git/repo Under the repo directory there is a README file:
bandit28@bandit:/tmp/git_level29/repo$ cat README.md # Bandit Notes Some notes for level29 of bandit. ## credentials - username: bandit29 - password: xxxxxxxxxx One useful git command is log, that show the commit logs.</description>
    </item>
    
    <item>
      <title>Level 29 -&gt; Level 30</title>
      <link>/posts/overthewire/level30/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level30/</guid>
      <description>Level Goal
There is a git repository at ssh://bandit29-git@localhost/home/bandit29-git/repo. The password for the user bandit29-git is the same as for the user bandit29.
Solution We have to download first the repo in a directory where we have write permissions:
bandit29@bandit:~$ mkdir /tmp/bandit_level30 bandit29@bandit:~$ cd /tmp/bandit_level30 bandit29@bandit:/tmp/bandit_level30$ git clone ssh://bandit29-git@localhost/home/bandit29-git/repo Inside the folder there is a README file:
bandit29@bandit:/tmp/bandit_level30$ cd repo bandit29@bandit:/tmp/bandit_level30/repo$ ls README.md bandit29@bandit:/tmp/bandit_level30/repo$ cat README.md # Bandit Notes Some notes for bandit30 of bandit.</description>
    </item>
    
    <item>
      <title>Level 30 -&gt; Level 31</title>
      <link>/posts/overthewire/level31/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level31/</guid>
      <description>Level Goal
There is a git repository at ssh://bandit30-git@localhost/home/bandit30-git/repo. The password for the user bandit30-git is the same as for the user bandit30.
Clone the repository and find the password for the next level.
Solution We have to download first the repo in a directory where we have write permissions:
bandit29@bandit:~$ mkdir /tmp/bandit_level31 bandit29@bandit:~$ cd /tmp/bandit_level31 bandit30@bandit:/tmp/bandit_level31$ git clone ssh://bandit30-git@localhost/home/bandit30-git/repo Inside the folder there is a README file:
bandit30@bandit:/tmp/bandit_level31/repo$ cat README.</description>
    </item>
    
    <item>
      <title>Level 31 -&gt; Level 32</title>
      <link>/posts/overthewire/level32/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level32/</guid>
      <description>Level Goal
There is a git repository at ssh://bandit31-git@localhost/home/bandit31-git/repo. The password for the user bandit31-git is the same as for the user bandit31.
Clone the repository and find the password for the next level.
Solution We have to download first the repo in a directory where we have write permissions:
bandit31@bandit:~$ mkdir /tmp/bandit_level32 bandit31@bandit:~$ cd /tmp/bandit_level32 bandit31@bandit:/tmp/bandit_level32$ git clone ssh://bandit31-git@localhost/home/bandit31-git/repo Inside the folder there is a README file:
bandit31@bandit:/tmp/bandit_level32/repo$ cat README.</description>
    </item>
    
    <item>
      <title>Level 32 -&gt; Level 33</title>
      <link>/posts/overthewire/level33/</link>
      <pubDate>Wed, 06 May 2020 17:26:01 +0200</pubDate>
      
      <guid>/posts/overthewire/level33/</guid>
      <description>Level Goal
After all this git stuff its time for another escape. Good luck!
Solution After we login in, we are presented with a shell named UPPERCASE SHELL:
WELCOME TO THE UPPERCASE SHELL &amp;gt;&amp;gt; We have to find a way to escape the current shell!
When we issue a command we are presented with a line which is telling us which environment variables are currently set:
WELCOME TO THE UPPERCASE SHELL &amp;gt;&amp;gt; ls sh: 1: LS: not found We have three variables:</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/info/</link>
      <pubDate>Thu, 05 Mar 2020 16:27:35 +0100</pubDate>
      
      <guid>/about/info/</guid>
      <description>A list of things I like:
 Chess Literature People with values  A list of things I don&amp;rsquo;t like:
 Musicals Photographers People who don&amp;rsquo;t know how to listen  </description>
    </item>
    
    <item>
      <title>Hack The Box write-ups</title>
      <link>/posts/topic2/</link>
      <pubDate>Thu, 05 Mar 2020 16:00:48 +0100</pubDate>
      
      <guid>/posts/topic2/</guid>
      <description>This are the topics</description>
    </item>
    
    <item>
      <title>Over The Wire Bandit write-ups</title>
      <link>/posts/topic1/</link>
      <pubDate>Thu, 05 Mar 2020 16:00:48 +0100</pubDate>
      
      <guid>/posts/topic1/</guid>
      <description>This are the topics</description>
    </item>
    
  </channel>
</rss>